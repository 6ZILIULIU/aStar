{"version":3,"sources":["..\\..\\..\\..\\assets\\Script/assets\\Script\\A_asterisk.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"..\\..\\..\\..\\assets\\Script","sourcesContent":["const { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class A_asterisk extends cc.Component {\r\n    @property(cc.Node)\r\n    ctxCanvas: cc.Node = null;\r\n    @property(cc.Node)\r\n    startPointBtn: cc.Node = null;\r\n    @property(cc.Node)\r\n    endPointBtn: cc.Node = null;\r\n    @property(cc.Node)\r\n    wallPointBtn: cc.Node = null;\r\n    @property(cc.Node)\r\n    calculatePathBtn: cc.Node = null;\r\n    @property(cc.Node)\r\n    clearWallBtn: cc.Node = null;\r\n    count = 0;\r\n    rows: number = 20;\r\n    cols: number = 20;\r\n    ctx: cc.Graphics = null;\r\n    gridSize: cc.Size = null;\r\n    gridArray = [];\r\n    startPoint: cc.Vec2 = null;\r\n    endPoint: cc.Vec2 = null;\r\n\r\n    playSpeed = 0.0;\r\n\r\n    onLoad() {\r\n        window['canvasScript'] = this;\r\n        console.log('this.gridArray', this.gridArray)\r\n        // 初始化画笔\r\n        let ctxNode = new cc.Node('ctx');\r\n        ctxNode.parent = this.ctxCanvas;\r\n        ctxNode.position = cc.v2(0, 0);\r\n        let ctx = ctxNode.addComponent(cc.Graphics);\r\n        ctx.lineWidth = 5;\r\n        ctx.strokeColor = cc.color(0, 0, 255);\r\n        ctx.fillColor = cc.color(0, 0, 0);\r\n        this.ctx = ctx;\r\n        // 初始化二维数组\r\n        this.gridArray = [];\r\n        for (let i = 0; i < this.rows; i++) {\r\n            let arr = [];\r\n            for (let j = 0; j < this.cols; j++) {\r\n                let a = { type: 'none' };\r\n                arr.push(a);\r\n            }\r\n            this.gridArray.push(arr);\r\n        }\r\n        this.ctxCanvas.setContentSize(cc.winSize.width * 0.7, cc.winSize.height);\r\n        this.gridSize = cc.size(this.ctxCanvas.width / this.cols, this.ctxCanvas.height / this.rows);\r\n        this.startPoint = cc.v2(2, 10);\r\n        this.endPoint = cc.v2(18, 10);\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        let self = this;\r\n        for (let row = 0; row < this.gridArray.length; row++) {\r\n            for (let col = 0; col < this.gridArray[row].length; col++) {\r\n                let pos = new cc.Vec2(\r\n                    row * this.gridSize.width,\r\n                    col * this.gridSize.height,\r\n                )\r\n                let data = this.gridArray[row][col];\r\n                data['pos'] = pos;\r\n                data.row = row;\r\n                data.col = col;\r\n                if (this.startPoint && row == this.startPoint.x && this.startPoint.y == col) {\r\n                    data.type = 'startPoint';\r\n                }\r\n                if (this.endPoint && row == this.endPoint.x && this.endPoint.y == col) {\r\n                    data.type = 'endPoint';\r\n                }\r\n            }\r\n        }\r\n        this.updateGrids();\r\n\r\n        // 监听事件\r\n        this.startPointBtn.on(cc.Node.EventType.TOUCH_START, function () {\r\n            console.log('setStartPointBtn')\r\n            self.node.targetOff(self);\r\n            self.node.on(cc.Node.EventType.TOUCH_START, this.setStartPoint, self);\r\n            self.node.on(cc.Node.EventType.TOUCH_MOVE, this.setStartPoint, self);\r\n        }, this);\r\n        this.endPointBtn.on(cc.Node.EventType.TOUCH_START, function () {\r\n            console.log('setEndPointBtn')\r\n            self.node.targetOff(self);\r\n            self.node.on(cc.Node.EventType.TOUCH_START, this.setEndPoint, self);\r\n            self.node.on(cc.Node.EventType.TOUCH_MOVE, this.setEndPoint, self);\r\n        }, this);\r\n\r\n        this.wallPointBtn.on(cc.Node.EventType.TOUCH_START, function () {\r\n            console.log('setwallPointBtn')\r\n            self.node.targetOff(self);\r\n            self.node.on(cc.Node.EventType.TOUCH_START, this.setWallPoint, self);\r\n            self.node.on(cc.Node.EventType.TOUCH_MOVE, this.setWallPoint, self);\r\n        }, this);\r\n        this.clearWallBtn.on(cc.Node.EventType.TOUCH_START, this.clearWallPoint, this);\r\n        this.calculatePathBtn.on(cc.Node.EventType.TOUCH_START, this.calculatePath, this);\r\n    }\r\n\r\n    // 画一个格子\r\n    drawOneRect(x, y, color) {\r\n        let ctx = this.ctx;\r\n        let gridSize = this.gridSize;\r\n        ctx.rect(x, y, gridSize.width, gridSize.height);\r\n        ctx.fillColor = color || new cc.Color(0, 0, 0);\r\n        ctx.stroke();\r\n        ctx.fill();\r\n    }\r\n\r\n    // 画一个小矩形\r\n    drawOneSmallRect(x, y, color) {\r\n        let ctx = this.ctx;\r\n        let gridSize = this.gridSize;\r\n        ctx.rect(x, y, gridSize.width * 0.6, gridSize.height * 0.6);\r\n        ctx.fillColor = color || new cc.Color(0, 0, 0);\r\n        ctx.stroke();\r\n        ctx.fill();\r\n    }\r\n    // 更新路径图\r\n    updateGrids() {\r\n        // console.log('updateGrids')\r\n        let ctx = this.ctx;\r\n        ctx.clear();\r\n        for (let row = 0; row < this.gridArray.length; row++) {\r\n            for (let col = 0; col < this.gridArray[row].length; col++) {\r\n                let data = this.gridArray[row][col];\r\n                // console.log('data', data)\r\n                let pos = data['pos'];\r\n                let color = data['color'];\r\n                // console.log('pos', pos);\r\n                switch (data.type) {\r\n                    case 'wallPoint': color = cc.color(0, 150, 255); break;\r\n                    case 'startPoint': color = cc.color(0, 255, 0); break;\r\n                    case 'endPoint': color = cc.color(255, 0, 0); break;\r\n                    default: color = cc.color(0, 0, 0); break;\r\n                }\r\n                this.drawOneRect(pos.x, pos.y, color);\r\n                if (data.process) {\r\n                    switch (data.process) {\r\n                        case 'open': color = cc.color(255, 255, 0); break;\r\n                        case 'close': color = cc.color(0, 255, 255); break;\r\n                    }\r\n                    this.drawOneSmallRect(pos.x, pos.y, color)\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // 设置起始点\r\n    setStartPoint(touch) {\r\n        for (let row = 0; row < this.gridArray.length; row++) {\r\n            for (let col = 0; col < this.gridArray[row].length; col++) {\r\n                // delete this.gridArray[row][col].process;\r\n                if (this.gridArray[row][col].type == 'startPoint') {\r\n                    this.gridArray[row][col].type = 'none';\r\n                }\r\n                let pos = this.gridArray[row][col].pos;\r\n                let rect = new cc.Rect(pos.x, pos.y, this.gridSize.width, this.gridSize.height);\r\n                if (rect.contains(touch.getLocation())) {\r\n                    // console.log('setStartPoint', row, col);\r\n                    this.gridArray[row][col].type = 'startPoint';\r\n                    this.startPoint = cc.v2(row, col);\r\n                }\r\n            }\r\n        }\r\n        // this.calculatePath();\r\n        this.updateGrids();\r\n        for (let row = 0; row < this.gridArray.length; row++) {\r\n            for (let col = 0; col < this.gridArray[row].length; col++) {\r\n                delete this.gridArray[row][col].process;\r\n            }\r\n        }\r\n    }\r\n    // 设置目的地\r\n    setEndPoint(touch) {\r\n        for (let row = 0; row < this.gridArray.length; row++) {\r\n            for (let col = 0; col < this.gridArray[row].length; col++) {\r\n                // delete this.gridArray[row][col].process;\r\n                if (this.gridArray[row][col].type == 'endPoint') {\r\n                    this.gridArray[row][col].type = 'none';\r\n                }\r\n                let pos = this.gridArray[row][col].pos;\r\n                let rect = new cc.Rect(pos.x, pos.y, this.gridSize.width, this.gridSize.height);\r\n                if (rect.contains(touch.getLocation())) {\r\n                    // console.log('setEndPoint', row, col);\r\n                    this.gridArray[row][col].type = 'endPoint';\r\n                    this.endPoint = cc.v2(row, col);\r\n                }\r\n            }\r\n        }\r\n        // this.calculatePath();\r\n        this.updateGrids();\r\n        for (let row = 0; row < this.gridArray.length; row++) {\r\n            for (let col = 0; col < this.gridArray[row].length; col++) {\r\n                delete this.gridArray[row][col].process;\r\n            }\r\n        }\r\n    }\r\n    // 设置墙壁\r\n    setWallPoint(touch) {\r\n        for (let row = 0; row < this.gridArray.length; row++) {\r\n            for (let col = 0; col < this.gridArray[row].length; col++) {\r\n                // if (this.gridArray[row][col].type == 'wallPoint') {\r\n                //     this.gridArray[row][col].type = 'none';\r\n                // }\r\n                let pos = this.gridArray[row][col].pos;\r\n                let rect = new cc.Rect(pos.x, pos.y, this.gridSize.width, this.gridSize.height);\r\n                if (rect.contains(touch.getLocation())\r\n                    && this.gridArray[row][col].type == 'none'\r\n                ) {\r\n                    // console.log('setwallPoint', row, col);\r\n                    this.gridArray[row][col].type = 'wallPoint';\r\n                    // this.endPoint = cc.v2(row, col);\r\n                }\r\n            }\r\n        }\r\n        // this.calculatePath();\r\n        this.updateGrids();\r\n    }\r\n\r\n    clearWallPoint() {\r\n        for (let row = 0; row < this.gridArray.length; row++) {\r\n            for (let col = 0; col < this.gridArray[row].length; col++) {\r\n                if (this.gridArray[row][col].type == 'wallPoint') {\r\n                    this.gridArray[row][col].type = 'none';\r\n                }\r\n                delete this.gridArray[row][col].process;\r\n            }\r\n        }\r\n        // this.calculatePath();\r\n        this.updateGrids();\r\n    }\r\n\r\n\r\n    /**\r\n     * a*算法 计算最短路径\r\n     */\r\n    calculatePath() {\r\n        let self = this;\r\n        console.log('计算路径');\r\n        self.count = 0;\r\n        // 初始化列表\r\n        let startPoint = new AStarPoint(this.startPoint.x, this.startPoint.y, null);\r\n        let endPoint = new AStarPoint(this.endPoint.x, this.endPoint.y, null);\r\n        let openList = new Array<AStarPoint>();\r\n        let closeList = [];\r\n        openList.push(startPoint);\r\n        function checkAround(val) {\r\n            self.count = self.count || 0;\r\n            self.count++;\r\n            if (self.count > 1000) {\r\n                console.error('超过次数')\r\n                return;\r\n            }\r\n            if (openList.length > 0) {\r\n                // debugger\r\n                // a) 寻找开启列表中F值最低的格子。我们称它为当前格\r\n                window['openList'] = openList;\r\n                // 如果列表不为空,查找F值最小的那个点\r\n                let minF, F, parentPoint;\r\n                for (let i of openList) {\r\n                    F = i.F;\r\n                    if (!minF || minF > F) {\r\n                        minF = F;\r\n                        parentPoint = i;\r\n                    }\r\n                }\r\n                // b) 把它切换到关闭列表\r\n                let idx = openList.indexOf(parentPoint)\r\n                if (idx != -1) {\r\n                    parentPoint = openList.splice(idx, 1)[0];\r\n                } else {\r\n                    console.log('no idx')\r\n                }\r\n\r\n                if (parentPoint.x == endPoint.x && parentPoint.y == endPoint.y) {\r\n                    // 该节点是目的地节点,就找完了，然后循环找到其父节点形成路径\r\n                    console.log('找到了');\r\n                    let list = [];\r\n                    let p = parentPoint;\r\n                    while (p.parent) {\r\n                        list.push(p.parent)\r\n                        p = p.parent;\r\n                    }\r\n                    self.updateGrids();\r\n                } else {\r\n                    // c) 对相邻的格中的每一个\r\n                    // 将point从openList中删除，加入到closeList\r\n                    delete self.gridArray[parentPoint.x][parentPoint.y]['process'];\r\n                    self.gridArray[parentPoint.x][parentPoint.y]['process'] = 'close';\r\n                    closeList.push(parentPoint);\r\n                    // 获取周围的点\r\n                    let directions = [cc.v2(0, 1), cc.v2(0, -1), cc.v2(1, 0), cc.v2(-1, 0), cc.v2(1, 1), cc.v2(1, -1), cc.v2(-1, 1), cc.v2(-1, -1)];\r\n                    let isNextToWall = false;\r\n                    for (let i of directions) {\r\n                        let curPoint = cc.v2(parentPoint.x + i.x, parentPoint.y + i.y);\r\n                        // 忽略在closeList、openList、超出边界的、不可通过的\r\n                        let res = closeList.find((v, i) => { return v.x == curPoint.x && v.y == curPoint.y; })\r\n                        if (res) { continue; }\r\n                        let openRes = openList.find((v, i) => { return v.x == curPoint.x && v.y == curPoint.y; })\r\n                        if (openRes) { continue; }\r\n                        if (!self.gridArray[curPoint.x] || !self.gridArray[curPoint.x][curPoint.y]) { continue; }\r\n                        let data = self.gridArray[curPoint.x][curPoint.y];\r\n                        // 墙壁\r\n                        if (data.type == 'wallPoint') {\r\n                            // console.log('不可通过', curPoint.x, curPoint.y)\r\n                            isNextToWall = true;\r\n                            continue;\r\n                        }\r\n\r\n                        let aStarPoint = new AStarPoint(data.row, data.col, parentPoint);\r\n                        let G, H;\r\n                        let dist = cc.v2(i.x, i.y).mag() * 10;\r\n                        G = parseInt(dist.toString());\r\n                        if (isNextToWall && G == 14) {\r\n                            // 如果有墙壁在周围就不能斜着走\r\n                            continue;\r\n                        }\r\n                        let dir = cc.v2(curPoint.x, curPoint.y).sub(self.endPoint);\r\n                        H = Math.abs(dir.x) + Math.abs(dir.y);\r\n                        // 计算F值\r\n                        aStarPoint.F = G + H * 10;\r\n                        aStarPoint.G = G;\r\n                        aStarPoint.H = H;\r\n                        aStarPoint.dirX = dir.x;\r\n                        aStarPoint.dirY = dir.y;\r\n                        // 放在待检测列表\r\n                        openList.push(aStarPoint)\r\n                        // 变为待检测节点\r\n                        delete self.gridArray[curPoint.x][curPoint.y]['process'];\r\n                        self.gridArray[curPoint.x][curPoint.y]['process'] = 'open';\r\n                    }\r\n                    // 再次检测，并且绘制一次界面\r\n                    self.scheduleOnce(() => {\r\n                        checkAround(openList);\r\n                        self.updateGrids();\r\n                    }, self.playSpeed)\r\n                }\r\n            } else {\r\n                console.log('openList 为空 没找到')\r\n            }\r\n        }\r\n        console.log('openList', openList)\r\n        checkAround(openList);\r\n    }\r\n}\r\n\r\nclass AStarPoint {\r\n    x = null;\r\n    y = null;\r\n    F = null;\r\n    G = null;\r\n    H = null;\r\n    dirX = null;\r\n    dirY = null;\r\n    parent: AStarPoint = null;\r\n    constructor(x, y, parent) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.parent = parent;\r\n    }\r\n}\r\n"]}